(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{316:function(t,s,a){"use strict";a.r(s);var n=a(14),o=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"functional-programming"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#functional-programming"}},[t._v("#")]),t._v(" functional programming")]),t._v(" "),s("p",[t._v("gh큰l has some support for basic functional programming")]),t._v(" "),s("h2",{attrs:{id:"first-class-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#first-class-functions"}},[t._v("#")]),t._v(" first class functions")]),t._v(" "),s("p",[t._v("gh큰l has first class functions. There is a function literal syntax that\nconstructs functions, which can then be called, but also assigned to\nvariables, passed to other functions, stored in data structures, or\npretty much anything else you can do with any other gh큰l value")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("f")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("g")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("g")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("ff")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("f")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"filter-map-reduce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filter-map-reduce"}},[t._v("#")]),t._v(" filter, map, reduce")]),t._v(" "),s("p",[t._v("gh큰l pipes provide filter, map and reduce as well as other ways to\nwork with sequences of values")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token comment"},[t._v("// map")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("doubled")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"doubled: '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("doubled")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token comment"},[t._v("// filter")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("evens")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("filter")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("%")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"evens: '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("evens")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token comment"},[t._v("// reduce")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("sum")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("reduce")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("acc")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("acc")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"sum: '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("sum")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"recursion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#recursion"}},[t._v("#")]),t._v(" recursion")]),t._v(" "),s("p",[t._v("gh큰l methods, global functions and anonymous functions\ncan all call themselves or each other recursively")]),t._v(" "),s("h3",{attrs:{id:"self-recursion-in-anonymous-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#self-recursion-in-anonymous-functions"}},[t._v("#")]),t._v(" self recursion in anonymous functions")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token comment"},[t._v("// factorial")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("factorial")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("rec")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("rec")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("-")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("fi")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"factorial(5): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("factorial")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token comment"},[t._v("// fibonacci")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("fibonacci")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("rec")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("<=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("rec")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("-")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("rec")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("-")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("fi")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"fibonacci(10): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("fibonacci")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"mutual-recursion-in-anonymous-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutual-recursion-in-anonymous-functions"}},[t._v("#")]),t._v(" mutual recursion in anonymous functions")]),t._v(" "),s("p",[t._v("Mutual recursion for anonymous functions is slightly awkward, but possible\nby passing one function into the other as an argument:")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("is_even")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("is_odd")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("bool")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("true")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("is_odd")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("-")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("fi")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("is_odd")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("rec")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("false")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("is_even")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("-")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("rec")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("fi")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"even(10): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("is_even")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("is_odd")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"odd(10): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("is_odd")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"mutual-recursion-in-named-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutual-recursion-in-named-functions"}},[t._v("#")]),t._v(" mutual recursion in named functions")]),t._v(" "),s("p",[t._v("Mututal recursion with named functions, doesn't require any workarounds")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token function"},[t._v("is_even")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("bool")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("true")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("is_odd")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("-")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("fi")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("is_odd")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("bool")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("false")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("is_even")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("-")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("fi")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n")])])]),s("h2",{attrs:{id:"immutable-data-structures-and-pure-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immutable-data-structures-and-pure-functions"}},[t._v("#")]),t._v(" immutable data structures and pure functions")]),t._v(" "),s("p",[t._v("While gh큰l supports imperitive code it also aims to support\nwriting pure functions with appropriate constructs and defaults")]),t._v(" "),s("h3",{attrs:{id:"lists-are-immutable-by-default"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lists-are-immutable-by-default"}},[t._v("#")]),t._v(" lists are immutable by default")]),t._v(" "),s("p",[t._v("The standard trait for lists "),s("code",[t._v("Collections.List[T]")]),t._v(" is immutable (it maps to .NET's "),s("code",[t._v("System.Collections.Generic.IReadOnlyList`1[T]")]),t._v(")")]),t._v(" "),s("h3",{attrs:{id:"arrays-are-immutable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arrays-are-immutable"}},[t._v("#")]),t._v(" arrays are immutable")]),t._v(" "),s("p",[t._v("The gh큰l array type "),s("code",[t._v("T[]")]),t._v(" does not expose an assign indexer")]),t._v(" "),s("h3",{attrs:{id:"maps-are-immutable-by-default"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maps-are-immutable-by-default"}},[t._v("#")]),t._v(" maps are immutable by default")]),t._v(" "),s("p",[t._v("The standard trait for maps "),s("code",[t._v("Collections.Map[T]")]),t._v(" is immutable (it maps to .NET's "),s("code",[t._v("System.Collections.Generic.IReadOnlyDictionary`2[K,V]")]),t._v(")")]),t._v(" "),s("h3",{attrs:{id:"list-literals-are-immutable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list-literals-are-immutable"}},[t._v("#")]),t._v(" list literals are immutable")]),t._v(" "),s("p",[t._v("The values constructed by list literals are immutable")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("list")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("element")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("list")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" "),s("span",{staticClass:"token comment"},[t._v("// elements can be read")]),t._v("\n\n"),s("span",{staticClass:"token comment"},[t._v("// the list is an instance of an immutable type:")]),t._v("\n"),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("list")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("get_type")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Collections")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("List")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token variable"},[t._v("element")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" "),s("span",{staticClass:"token comment"},[t._v("// elements cannot be assigned to - compile time error")]),t._v("\n")])])]),s("h3",{attrs:{id:"tuples-are-immutable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tuples-are-immutable"}},[t._v("#")]),t._v(" tuples are immutable")]),t._v(" "),s("p",[t._v("Values of gh큰l tuple types "),s("code",[t._v("(T1, T2, T3, ...)")]),t._v(" are immutable (the elements "),s("code",[t._v("`0")]),t._v(", "),s("code",[t._v("`1")]),t._v(", "),s("code",[t._v("`2")]),t._v(", ... do not have assign accessors)")]),t._v(" "),s("h3",{attrs:{id:"tuple-literals-are-immutable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tuple-literals-are-immutable"}},[t._v("#")]),t._v(" tuple literals are immutable")]),t._v(" "),s("p",[t._v("The values constructed by tuple literals are immutable")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("tuple")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("element")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("tuple")]),s("span",{staticClass:"token operator"},[t._v(".")]),t._v("`"),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" "),s("span",{staticClass:"token comment"},[t._v("// elements can be read")]),t._v("\n\n"),s("span",{staticClass:"token comment"},[t._v("// the tuple is an instance of an immutable type:")]),t._v("\n"),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("tuple")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("get_type")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n\n"),s("span",{staticClass:"token variable"},[t._v("tuple")]),s("span",{staticClass:"token operator"},[t._v(".")]),t._v("`"),s("span",{staticClass:"token number"},[t._v("3")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" "),s("span",{staticClass:"token comment"},[t._v("// elements cannot be assigned to - compile time error")]),t._v("\n")])])]),s("h3",{attrs:{id:"properties-are-not-publicly-assignable-by-default"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#properties-are-not-publicly-assignable-by-default"}},[t._v("#")]),t._v(" properties are not publicly assignable by default")]),t._v(" "),s("p",[t._v("When defining properties in classes and structs, they are not\npublicly assignable by default")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("struct")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("THING")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token variable"},[t._v("name")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("init")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("name")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n        "),s("span",{staticClass:"token variable"},[t._v("self")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("name")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("name")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("thing")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("THING")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"a thing"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token variable"},[t._v("thing")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("name")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"change it"')]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" "),s("span",{staticClass:"token comment"},[t._v("// compile time error")]),t._v("\n")])])]),s("h3",{attrs:{id:"pipes-support-non-mutating-operations-over-lists"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pipes-support-non-mutating-operations-over-lists"}},[t._v("#")]),t._v(" pipes support non mutating operations over lists")]),t._v(" "),s("p",[t._v("pipes make it easy to iterate over lists and generators producing\ntransformed output without mutating the source data")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("list")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("doubled")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("list")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token comment"},[t._v("// original list is still the same:")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"list: '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("list")]),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"expression-oriented-programming"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expression-oriented-programming"}},[t._v("#")]),t._v(" expression oriented programming")]),t._v(" "),s("p",[t._v("Expression bodied functions and some support for\nexpression oriented programming help in writing\npure functions")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("add")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"add(5, 3): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("add")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("classify")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v("\n        "),s("span",{staticClass:"token string"},[t._v('"Zero"')]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("elif")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("%")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("/\\")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("<")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("%")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"Negative even and multiple of 5"')]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"Negative even"')]),t._v(" "),s("span",{staticClass:"token control"},[t._v("fi")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("elif")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("%")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("!=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("/\\")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("<")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("%")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"Negative odd and multiple of 5"')]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"Negative odd"')]),t._v(" "),s("span",{staticClass:"token control"},[t._v("fi")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("elif")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("%")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("%")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"Positive even and multiple of 5"')]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"Positive even"')]),t._v(" "),s("span",{staticClass:"token control"},[t._v("fi")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("else")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("%")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"Positive odd and multiple of 5"')]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"Positive odd"')]),t._v(" "),s("span",{staticClass:"token control"},[t._v("fi")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("fi")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"classifyNumber(-10): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("classify")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token operator"},[t._v("-")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"classifyNumber(-3): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("classify")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token operator"},[t._v("-")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"classifyNumber(0): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("classify")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"classifyNumber(4): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("classify")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"classifyNumber(25): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("classify")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("25")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("        \n\n")])])]),s("h2",{attrs:{id:"higher-order-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#higher-order-functions"}},[t._v("#")]),t._v(" higher order functions")]),t._v(" "),s("h3",{attrs:{id:"higher-order-generically-typed-global-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#higher-order-generically-typed-global-functions"}},[t._v("#")]),t._v(" higher order generically typed global functions")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token variable"},[t._v("apply")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("f")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("T")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token variable"},[t._v("apply_if")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("f")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("predicate")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("bool")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("T")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("predicate")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("fi")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"higher-order-generically-typed-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#higher-order-generically-typed-methods"}},[t._v("#")]),t._v(" higher order generically typed methods:")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("HIGHER_ORDER_FUNCTIONS")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("apply")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("f")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("T")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("static")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("apply_if")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("f")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("predicate")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("bool")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("T")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("static")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("predicate")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("fi")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n")])])]),s("h3",{attrs:{id:"higher-order-anonymous-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#higher-order-anonymous-functions"}},[t._v("#")]),t._v(" higher order anonymous functions:")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("times_2")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"apply(times_2, 5): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("apply")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("times_2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("square")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"apply(square, 5): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("apply")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("square")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token comment"},[t._v("// higher order function consumes another function:")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("apply_twice")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("f")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"apply_twice(times_2, 5): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("apply_twice")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("times_2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token comment"},[t._v("// higher order function returns another function:")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("create_apply_twice")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("f")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("apply_twice_times_2")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("create_apply_twice")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("times_2")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"apply_twice_times_2(5): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("apply_twice_times_2")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"union-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#union-types"}},[t._v("#")]),t._v(" union types")]),t._v(" "),s("p",[t._v("Unions are under development "),s("a",{attrs:{href:"https://github.com/degory/ghul/issues/1132",target:"_blank",rel:"noopener noreferrer"}},[t._v("(see GitHub issue #1132)"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Unions hold a value of one of several different types (variants). Each variant can have its own set of fields. This is useful for creating types that can represent multiple kinds of data in a single structure.")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("union")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Shape")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("CIRCLE")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("radius")]),t._v(": "),s("span",{staticClass:"token variable"},[t._v("float")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("SQUARE")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("side")]),t._v(": "),s("span",{staticClass:"token variable"},[t._v("float")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("union")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Option")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("SOME")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("value")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("NONE")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("union")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Result")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("E")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("OK")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("value")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("ERROR")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("error")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("E")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n")])])]),s("p",[t._v("Accessing the data held by a union's variant requires first checking which variant the union currently holds. Unions provide properties for this for each of their variants:")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("an_option")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("is_some")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("value")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("an_option")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("some")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token operator"},[t._v("...")]),t._v("\n"),s("span",{staticClass:"token control"},[t._v("fi")]),t._v("\n")])])]),s("p",[t._v("Unions shaped like "),s("code",[t._v("Option")]),t._v(" types (exactly one non-unit variant) support the "),s("code",[t._v("?")]),t._v(" and "),s("code",[t._v("!")]),t._v(" operators for testing if they hold a value and for unwrapping that value, respectively:")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("an_option")]),s("span",{staticClass:"token operator"},[t._v("?")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("value")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("an_option")]),s("span",{staticClass:"token operator"},[t._v("!")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token operator"},[t._v("...")]),t._v("\n"),s("span",{staticClass:"token control"},[t._v("fi")]),t._v("\n")])])]),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("use")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("IO")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Std")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("union")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Option")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("SOME")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("value")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("NONE")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("union")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("List")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("CONS")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("head")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("tail")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("List")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("union")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Tree")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("LEAF")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("value")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("NODE")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("left")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("Tree")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("right")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("Tree")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("entry")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("test_option")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("test_list")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("test_tree")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("test_option")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("some_int")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("some")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("42")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("none_int")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("none")]),t._v("`"),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("stringify_option")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("o")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("Option")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("rec")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("o")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("is_some")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v("\n            "),s("span",{staticClass:"token string"},[t._v('"'),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("o")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("some")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("else")]),t._v("\n            "),s("span",{staticClass:"token string"},[t._v('"none"')]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("fi")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token function"},[t._v("stringify_option")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("some_int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token function"},[t._v("stringify_option")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("none_int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("test_list")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("list")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("cons")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("cons")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("cons")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("nil")]),t._v("`"),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("stringify_list")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("l")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("List")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("rec")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("l")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("is_cons")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v("\n            "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("head")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("tail")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("l")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("cons")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("in")]),t._v("\n            "),s("span",{staticClass:"token string"},[t._v('"'),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("head")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v(", "),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token keyword"},[t._v("rec")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("tail")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("else")]),t._v("\n            "),s("span",{staticClass:"token string"},[t._v('"nil"')]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("fi")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token function"},[t._v("stringify_list")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("list")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("test_tree")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("tree")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("node")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("node")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("\n            "),s("span",{staticClass:"token function"},[t._v("leaf")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n            "),s("span",{staticClass:"token function"},[t._v("leaf")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n        "),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("node")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("\n            "),s("span",{staticClass:"token function"},[t._v("leaf")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n            "),s("span",{staticClass:"token function"},[t._v("leaf")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n        "),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("stringify_tree")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("t")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("Tree")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("rec")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("t")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("is_node")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v("\n            "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("left")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("right")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("t")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("node")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("in")]),t._v("\n            "),s("span",{staticClass:"token string"},[t._v('"('),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token keyword"},[t._v("rec")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("left")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v(", "),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token keyword"},[t._v("rec")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("right")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v(')"')]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("else")]),t._v("\n            "),s("span",{staticClass:"token string"},[t._v('"'),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("t")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("leaf")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("fi")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token function"},[t._v("stringify_tree")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("tree")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token variable"},[t._v("some")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("value")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Option")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Option")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("SOME")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("value")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token variable"},[t._v("none")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Option")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Option")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("NONE")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token variable"},[t._v("node")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("left")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("Tree")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("right")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("Tree")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Tree")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Tree")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("NODE")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("left")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("right")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token variable"},[t._v("leaf")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("value")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Tree")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Tree")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("LEAF")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("value")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token variable"},[t._v("cons")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("head")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("tail")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("List")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("List")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("List")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("CONS")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("head")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("tail")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token variable"},[t._v("nil")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("List")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("List")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"pattern-matching-todo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pattern-matching-todo"}},[t._v("#")]),t._v(" pattern matching (TODO)")]),t._v(" "),s("p",[t._v("Pattern matching is under development "),s("a",{attrs:{href:"https://github.com/degory/ghul/issues/1134",target:"_blank",rel:"noopener noreferrer"}},[t._v("(see GitHub issue #1134)"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"currying"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#currying"}},[t._v("#")]),t._v(" currying")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("curryed_add")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("y")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"curryed_add(5)(3): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("curryed_add")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("add_5")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("curryed_add")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"add_5(3): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("add_5")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("add_10")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("curryed_add")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"add_10(3): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("add_10")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"partial-application"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#partial-application"}},[t._v("#")]),t._v(" partial application")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[t._v("    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("add")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("add_5")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("y")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("add")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"add_5(3): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("add_5")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("add_10")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("y")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("add")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"add_10(3): '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token function"},[t._v("add_10")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"lazy-evaluation-todo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lazy-evaluation-todo"}},[t._v("#")]),t._v(" lazy evaluation (TODO)")]),t._v(" "),s("p",[t._v("Lazy evaluation is not yet supported "),s("a",{attrs:{href:"https://github.com/degory/ghul/issues/1165",target:"_blank",rel:"noopener noreferrer"}},[t._v("(see GitHub issue #1165)"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("The workaround is to implement the "),s("code",[t._v("Iterator[T]")]),t._v(" trait and manually manage state. For example:")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token comment"},[t._v("// generate an infinite sequence of T generator from state S")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("GENERATOR")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("S")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("Collections")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Iterator")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Collections")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Iterable")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token variable"},[t._v("current")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token variable"},[t._v("iterator")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("Collections")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Iterator")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("self")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token variable"},[t._v("_initial")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("S")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token variable"},[t._v("_state")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("S")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token variable"},[t._v("_generator")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("S")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("S")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" "),s("span",{staticClass:"token comment"},[t._v("// given the current state, return the next state and the current value")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("init")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("initial")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("S")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("generator")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("S")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("S")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n        "),s("span",{staticClass:"token variable"},[t._v("_initial")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("initial")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token variable"},[t._v("_generator")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("generator")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("reset")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("init")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("reset")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n        \n    "),s("span",{staticClass:"token function"},[t._v("move_next")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("bool")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n        "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("_state")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("current")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("_generator")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("_state")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("return")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("true")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("reset")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n        "),s("span",{staticClass:"token variable"},[t._v("_state")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("_initial")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("dispose")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token comment"},[t._v("// generator constructor helper so we don't have to specify types")]),t._v("\n"),s("span",{staticClass:"token variable"},[t._v("generate")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("S")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("initial")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("S")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("generator")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("S")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("S")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("GENERATOR")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("S")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("GENERATOR")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token class-name"},[t._v("T")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("S")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("initial")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("generator")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token comment"},[t._v("// generates an infinite sequence of fibonacci numbers:")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("fibonacci")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("generate")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("state")]),t._v(": "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n        "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v("\n            "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("prev")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("current")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("state")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n            "),s("span",{staticClass:"token variable"},[t._v("next")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("prev")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("current")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("in")]),t._v("\n            "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("current")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("next")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("next")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token comment"},[t._v("// generates an infinite sequence of factorials")]),t._v("\n"),s("span",{staticClass:"token comment"},[t._v("// (although overflow will occur fairly rapidly)")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("factorial_sequence")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("generate")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("1U"),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" 1UL"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("state")]),t._v(": "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("uint")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("ulong")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n        "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v("\n            "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("current")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("state")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n            "),s("span",{staticClass:"token variable"},[t._v("next_n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" 1U"),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n            "),s("span",{staticClass:"token variable"},[t._v("next")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("current")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("cast")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("ulong")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("next_n")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("in")]),t._v(" \n            "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("next_n")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("next")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("next")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token comment"},[t._v("// the resulting sequences can be comsumed by a pipe, generating values on demand:")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"first 10 fibonacci numbers: '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("fibonacci_sequence")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("take")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"first 10 factorial numbers: '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("factorial_sequence")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("take")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token control"},[t._v("for")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("fib")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("fact")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("in")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("fibonacci_sequence")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("zip")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("factorial_sequence")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("take")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("index")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("do")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"fibonacci '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v(" is "),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("fib")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"factorial '),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v(" is "),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("{")]),s("span",{staticClass:"token variable"},[t._v("fact")]),s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),t._v('"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token control"},[t._v("od")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=o.exports}}]);