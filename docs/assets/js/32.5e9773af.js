(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{315:function(s,t,a){"use strict";a.r(t);var n=a(14),o=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"functional-programming"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#functional-programming"}},[s._v("#")]),s._v(" functional programming")]),s._v(" "),t("p",[s._v("gh큰l has some support for basic functional programming")]),s._v(" "),t("h2",{attrs:{id:"first-class-functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#first-class-functions"}},[s._v("#")]),s._v(" first class functions")]),s._v(" "),t("p",[s._v("gh큰l has first class functions. There is a function literal syntax that\nconstructs functions, which can then be called, but also assigned to\nvariables, passed to other functions, stored in data structures, or\npretty much anything else you can do with any other gh큰l value")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("f")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("g")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("g")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("ff")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("f")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n")])])]),t("h2",{attrs:{id:"filter-map-reduce"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filter-map-reduce"}},[s._v("#")]),s._v(" filter, map, reduce")]),s._v(" "),t("p",[s._v("gh큰l pipes provide filter, map and reduce as well as other ways to\nwork with sequences of values")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token comment"},[s._v("// map")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("doubled")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("map")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"doubled: {doubled}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token comment"},[s._v("// filter")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("evens")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("filter")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("%")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"evens: {evens}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token comment"},[s._v("// reduce")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("sum")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("reduce")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("acc")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("acc")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"sum: {sum}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n")])])]),t("h2",{attrs:{id:"recursion"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#recursion"}},[s._v("#")]),s._v(" recursion")]),s._v(" "),t("p",[s._v("gh큰l methods, global functions and anonymous functions\ncan all call themselves or each other recursively")]),s._v(" "),t("h3",{attrs:{id:"self-recursion-in-anonymous-functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#self-recursion-in-anonymous-functions"}},[s._v("#")]),s._v(" self recursion in anonymous functions")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token comment"},[s._v("// factorial")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("factorial")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("rec")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("rec")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("-")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("fi")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"factorial(5): {factorial(5)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token comment"},[s._v("// fibonacci")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("fibonacci")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("rec")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("<=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("rec")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("-")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("rec")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("-")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("fi")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"fibonacci(10): {fibonacci(10)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n")])])]),t("h3",{attrs:{id:"mutual-recursion-in-anonymous-functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mutual-recursion-in-anonymous-functions"}},[s._v("#")]),s._v(" mutual recursion in anonymous functions")]),s._v(" "),t("p",[s._v("Mutual recursion for anonymous functions is slightly awkward, but possible\nby passing one function into the other as an argument:")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("is_even")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("is_odd")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("bool")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("true")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("is_odd")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("-")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("fi")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("is_odd")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("rec")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("false")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("is_even")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("-")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("rec")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("fi")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"even(10): {is_even(10, is_odd)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"odd(10): {is_odd(10)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n")])])]),t("h3",{attrs:{id:"mutual-recursion-in-named-functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mutual-recursion-in-named-functions"}},[s._v("#")]),s._v(" mutual recursion in named functions")]),s._v(" "),t("p",[s._v("Mututal recursion with named functions, doesn't require any workarounds")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token function"},[s._v("is_even")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("bool")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("true")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("is_odd")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("-")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("fi")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("is_odd")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("bool")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("false")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("is_even")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("-")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("fi")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n")])])]),t("h2",{attrs:{id:"immutable-data-structures-and-pure-functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#immutable-data-structures-and-pure-functions"}},[s._v("#")]),s._v(" immutable data structures and pure functions")]),s._v(" "),t("p",[s._v("While gh큰l doesn't do anything special to enforce immutability,\npipes make it easy to iterate over data and produce\ntransformed output without mutation")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("list")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("doubled")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("list")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("map")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token comment"},[s._v("// original list is still the same:")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"list: {list| }"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("Expression bodied functions and some support for\nexpression oriented programming help in writing\npure functions")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("add")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"add(5, 3): {add(5, 3)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("classify")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v("\n        "),t("span",{staticClass:"token string"},[s._v('"Zero"')]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("elif")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("%")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("/\\")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("<")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("%")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"Negative even and multiple of 5"')]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"Negative even"')]),s._v(" "),t("span",{staticClass:"token control"},[s._v("fi")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("elif")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("%")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("!=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("/\\")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("<")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("%")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"Negative odd and multiple of 5"')]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"Negative odd"')]),s._v(" "),t("span",{staticClass:"token control"},[s._v("fi")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("elif")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("%")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("%")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"Positive even and multiple of 5"')]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"Positive even"')]),s._v(" "),t("span",{staticClass:"token control"},[s._v("fi")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("else")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("%")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"Positive odd and multiple of 5"')]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"Positive odd"')]),s._v(" "),t("span",{staticClass:"token control"},[s._v("fi")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("fi")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"classifyNumber(-10): {classify(-10)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"classifyNumber(-3): {classify(-3)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"classifyNumber(0): {classify(0)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"classifyNumber(4): {classify(4)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"classifyNumber(25): {classify(25)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("        \n\n")])])]),t("h2",{attrs:{id:"higher-order-functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#higher-order-functions"}},[s._v("#")]),s._v(" higher order functions")]),s._v(" "),t("h3",{attrs:{id:"higher-order-generically-typed-global-functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#higher-order-generically-typed-global-functions"}},[s._v("#")]),s._v(" higher order generically typed global functions")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token variable"},[s._v("apply")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("f")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("T")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token variable"},[s._v("apply_if")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("f")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("predicate")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("bool")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("T")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("predicate")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("fi")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n")])])]),t("h3",{attrs:{id:"higher-order-generically-typed-methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#higher-order-generically-typed-methods"}},[s._v("#")]),s._v(" higher order generically typed methods:")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("class")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("HIGHER_ORDER_FUNCTIONS")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("apply")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("f")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("T")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("static")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v("\n        "),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("apply_if")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("f")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("predicate")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("bool")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("T")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("static")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("predicate")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("fi")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n")])])]),t("h3",{attrs:{id:"higher-order-anonymous-functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#higher-order-anonymous-functions"}},[s._v("#")]),s._v(" higher order anonymous functions:")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("times_2")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"apply(times_2, 5): {apply(times_2, 5)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("square")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"apply(square, 5): {apply(square, 5)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token comment"},[s._v("// higher order function consumes another function:")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("apply_twice")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("f")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"apply_twice(times_2, 5): {apply_twice(times_2, 5)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token comment"},[s._v("// higher order function returns another function:")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("create_apply_twice")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("f")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("apply_twice_times_2")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("create_apply_twice")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("times_2")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"apply_twice_times_2(5): {apply_twice_times_2(5)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n")])])]),t("h2",{attrs:{id:"pattern-matching"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pattern-matching"}},[s._v("#")]),s._v(" pattern matching")]),s._v(" "),t("p",[s._v("pattern matching is not yet supported, but if expressions\ngo some way to providing similar functionality:")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("is_even")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v("\n    "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" \n        "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("%")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v(" \n            "),t("span",{staticClass:"token boolean"},[s._v("true")]),s._v(" \n        "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" \n            "),t("span",{staticClass:"token boolean"},[s._v("false")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("fi")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("is_odd")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" \n    "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" \n        "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("%")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("!=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v("\n            "),t("span",{staticClass:"token boolean"},[s._v("true")]),s._v(" \n        "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" \n            "),t("span",{staticClass:"token boolean"},[s._v("false")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("fi")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("parity")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" \n    "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" \n        "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("is_even")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v("\n            "),t("span",{staticClass:"token string"},[s._v('"even"')]),s._v(" \n        "),t("span",{staticClass:"token control"},[s._v("else")]),s._v("\n            "),t("span",{staticClass:"token string"},[s._v('"odd"')]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("fi")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"parity(10): {parity(10)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"parity(11): {parity(11)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n")])])]),t("h2",{attrs:{id:"currying"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#currying"}},[s._v("#")]),s._v(" currying")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("curryed_add")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"curryed_add(5)(3): {curryed_add(5)(3)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("add_5")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("curryed_add")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"add_5(3): {add_5(3)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("add_10")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("curryed_add")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("10")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"add_10(3): {add_10(3)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n")])])]),t("h2",{attrs:{id:"partial-application"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#partial-application"}},[s._v("#")]),s._v(" partial application")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[s._v("    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("add")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("add_5")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("add")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"add_5(3): {add_5(3)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("add_10")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("add")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("10")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"add_10(3): {add_10(3)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n")])])]),t("h2",{attrs:{id:"lazy-evaluation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lazy-evaluation"}},[s._v("#")]),s._v(" lazy evaluation")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token comment"},[s._v("// a generic infinite sequence generator with arbitrary state")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("class")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("GENERATOR")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("S")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("Collections")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Iterator")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("Collections")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Iterable")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token variable"},[s._v("current")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token variable"},[s._v("iterator")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("Collections")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Iterator")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("self")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token variable"},[s._v("_initial")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("S")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token variable"},[s._v("_state")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("S")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token variable"},[s._v("_generator")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("S")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token class-name"},[s._v("S")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v(" "),t("span",{staticClass:"token comment"},[s._v("// given the current state, return the next state and the current value")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("init")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("initial")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("S")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("generator")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("S")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token class-name"},[s._v("S")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token variable"},[s._v("_initial")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("initial")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token variable"},[s._v("_generator")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("generator")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token function"},[s._v("reset")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("init")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token function"},[s._v("reset")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n        \n    "),t("span",{staticClass:"token function"},[s._v("move_next")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("bool")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("_state")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("current")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("_generator")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("_state")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("true")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("reset")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token variable"},[s._v("_state")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("_initial")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("dispose")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n"),t("span",{staticClass:"token comment"},[s._v("// generator constructor helper so we don't have to specify types")]),s._v("\n"),t("span",{staticClass:"token variable"},[s._v("generate")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("S")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("initial")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("S")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("generator")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("S")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token class-name"},[s._v("S")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("GENERATOR")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("S")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("GENERATOR")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("S")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("initial")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("generator")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n")])])]),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token comment"},[s._v("// generates an infinite sequence of fibonacci numbers:")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("fibonacci_sequence")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("generate")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),s._v("\n    "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v("\n    "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("state")]),s._v(": "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("prev")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("current")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v("\n        "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("current")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("prev")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("current")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("prev")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("current")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v("\n"),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token comment"},[s._v("// generates an infinite sequence of factorials:")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("factorial_sequence")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("generate")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),s._v("\n    "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v("\n    "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("state")]),s._v(": "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("prev")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v("\n        "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("prev")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("prev")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("n")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v("\n"),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("fibonacci_sequence_block_body")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("generate")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),s._v("\n    "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v("\n    "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("state")]),s._v(": "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("prev")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("current")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("next")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("prev")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("current")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("state")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("current")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("next")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("next")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v("\n"),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"first 20 fibonacci numbers: {fibonacci_sequence | .take(10)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"first 20 factorial numbers: {factorial_sequence | .take(10)}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token control"},[s._v("for")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("fib")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("fact")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("in")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("fibonacci_sequence")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("zip")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("factorial_sequence")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("take")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("10")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("index")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("do")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"fibonacci {i} is {fib}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"factorial {i} is {fact}"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token control"},[s._v("od")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);