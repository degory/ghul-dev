(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{313:function(s,t,a){"use strict";a.r(t);var n=a(14),o=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"ghul-programming-language"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ghul-programming-language"}},[s._v("#")]),s._v(" ghūl programming language")]),s._v(" "),t("h2",{attrs:{id:"about-ghul"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#about-ghul"}},[s._v("#")]),s._v(" about ghūl")]),s._v(" "),t("p",[s._v("ghūl is mainly an opportunity for "),t("a",{attrs:{href:"https://github.com/degory",target:"_blank",rel:"noopener noreferrer"}},[s._v("me"),t("OutboundLink")],1),s._v(" to experiment with programming language design. Apart from a slightly quirky syntax, ghūl is a fairly conventional programming language. Although it is a hobby project maintained by a single person, it aims to be sufficiently expressive to be useful for general purpose development: for example, the "),t("a",{attrs:{href:"https://github.com/degory/ghul",target:"_blank",rel:"noopener noreferrer"}},[s._v("ghūl compiler"),t("OutboundLink")],1),s._v(" itself is written in ghūl")]),s._v(" "),t("h2",{attrs:{id:"features"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[s._v("#")]),s._v(" features")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("type safety")]),s._v(": ghūl enforces type safety at compile-time.")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("functional programming elements")]),s._v(": ghūl supports function literals, including anonymous functions, lambdas, and closures.")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("OOP")]),s._v(": ghūl supports classes, objects, inheritance, polymorphism, and other Object-Oriented Programming concepts.")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("error handling")]),s._v(": the language includes try/catch/finally for error handling.")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("generics")]),s._v(": ghūl types, methods, and functions can have generic type parameters.")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v(".NET integration")]),s._v(": ghūl targets .NET, producing and consuming NuGet packages and supporting inter-operation with other .NET languages.")])])]),s._v(" "),t("h2",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[s._v("#")]),s._v(" examples")]),s._v(" "),t("h3",{attrs:{id:"hello-world"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[s._v("#")]),s._v(" hello world!")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token function"},[s._v("entry")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v("\n    "),t("span",{staticClass:"token class-name"},[s._v("IO")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Std")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"hello world"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v(" \n")])])]),t("h3",{attrs:{id:"functional"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#functional"}},[s._v("#")]),s._v(" functional")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("use")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("IO")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Std")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("entry")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("add")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("subtract")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("-")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("multiply")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("divide")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("/")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("calc")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("operation")]),s._v(": "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("operation")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("a")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("10.0")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("b")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5.0")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"Addition: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("calc")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("a")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("b")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("add")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"Subtraction: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("calc")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("a")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("b")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("subtract")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"Multiplication: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("calc")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("a")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("b")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("multiply")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"Division: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("calc")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("a")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("b")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("divide")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n")])])]),t("h3",{attrs:{id:"oop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#oop"}},[s._v("#")]),s._v(" OOP")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("use")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("IO")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Std")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token keyword"},[s._v("class")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("Calculator")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("init")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("add")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("single")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("subtract")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("single")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("-")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("multiply")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("single")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("divide")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),t("span",{staticClass:"token variable"},[s._v("single")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("single")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("!=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0.0")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v("\n            "),t("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("/")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("y")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("else")]),s._v("\n            "),t("span",{staticClass:"token control"},[s._v("throw")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("System")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("DivideByZeroException")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"Error: Division by zero"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("fi")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("entry")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("calc")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("Calculator")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("a")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("10.0")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("b")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5.0")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"Addition: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("calc")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("add")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("a")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("b")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"Subtraction: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("calc")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("subtract")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("a")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("b")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"Multiplication: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("calc")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("multiply")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("a")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("b")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"Division: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("calc")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("divide")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("a")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("b")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n")])])]),t("h3",{attrs:{id:"literals"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#literals"}},[s._v("#")]),s._v(" literals")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("use")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("IO")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Std")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("entry")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"string literal"')]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("get_type")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("string")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"string literal"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token string"},[s._v("'c'")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("get_type")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("char")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"char literal: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token string"},[s._v("'c'")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("123")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("get_type")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"integer literal: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("123")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" 123_456"),t("span",{staticClass:"token operator"},[s._v(".")]),s._v("789e6D "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("get_type")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("double")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"double literal: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" 123_456"),t("span",{staticClass:"token operator"},[s._v(".")]),s._v("789e6D"),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"three"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"string"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"tuple"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("get_type")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token class-name"},[s._v("string")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),t("span",{staticClass:"token class-name"},[s._v("string")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),t("span",{staticClass:"token class-name"},[s._v("string")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"tuple literal: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"three"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"string"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"tuple"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token string"},[s._v('"a"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"four"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"element"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"list"')]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("get_type")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("string")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"list literal: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token string"},[s._v('"a"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"four"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"element"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"list"')]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token operator"},[s._v("|")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n")])])]),t("h3",{attrs:{id:"control-flow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#control-flow"}},[s._v("#")]),s._v(" control flow")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("use")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("IO")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Std")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("entry")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token comment"},[s._v("// ghul has basic flow control statements")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// assert tests a condition, and throws an exception if the condition does not hold:")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(">")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// the optional assert else clause supplies a message to include in any thrown exception:")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("true")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"who knows what to believe?"')]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// or a specific object to throw:")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("<")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"hello"')]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("length")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("else")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("System")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("IndexOutOfRangeException")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    \n    "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("true")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("true")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('""')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("fi")]),s._v("    \n\n    "),t("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("false")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("\\/")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("true")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("then")]),s._v("\n        "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"false or-else true"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("else")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("false")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("fi")]),s._v("\n    \n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("while")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("<")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("10")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("do")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("<")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("10")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("od")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("10")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("count")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("for")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("in")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token operator"},[s._v("..")]),t("span",{staticClass:"token number"},[s._v("10")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("do")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(">=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("/\\")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("<")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("10")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n        "),t("span",{staticClass:"token variable"},[s._v("count")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("count")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("od")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("count")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("10")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// 0..10 is not for loop specific syntax, '..' is just an operator that constructs")]),s._v("\n    "),t("span",{staticClass:"token comment"},[s._v("// an iterable integer range:")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("range")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token operator"},[s._v("..")]),t("span",{staticClass:"token number"},[s._v("100")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("range")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("from")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("range")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("to")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("100")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("range")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("count")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("100")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// for can iterate over anything that implements Iterable[T], Iterator[T], or move_next() and current:")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("for")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("ci")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("in")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"hello"')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("index")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("do")]),s._v("\n        "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v("\"char {0} of 'hello' is {1}\"")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token variable"},[s._v("ci")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("index")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("ci")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("value")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("od")]),s._v("    \n    \n    "),t("span",{staticClass:"token control"},[s._v("try")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"wombat"')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=~")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"elephant"')]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("catch")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("ex")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("System")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Exception")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("ex")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("get_type")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("Ghul")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("AssertFailedException")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n        "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"caught: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("ex")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("yrt")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// try finally for ensuring clean-up code is run:")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("is_resource_in_use")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("false")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("try")]),s._v("\n        "),t("span",{staticClass:"token variable"},[s._v("is_resource_in_use")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("true")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"resource acquired"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("throw")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("System")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Exception")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"oops: exception with resource held"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("catch")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("ex")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("System")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Exception")]),s._v("\n        "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"caught: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("ex")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("finally")]),s._v("\n        "),t("span",{staticClass:"token variable"},[s._v("is_resource_in_use")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token boolean"},[s._v("false")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"resource released"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("yrt")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("!")]),t("span",{staticClass:"token variable"},[s._v("is_resource_in_use")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    \n    "),t("span",{staticClass:"token class-name"},[s._v("IO")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Std")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"done"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n")])])]),t("h3",{attrs:{id:"generics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#generics"}},[s._v("#")]),s._v(" generics")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("use")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("IO")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Std")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("use")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("Collections")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token variable"},[s._v("count_things")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("E")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("things")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("Iterable")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("E")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("int")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("count")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("for")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("thing")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("in")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("things")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("do")]),s._v("\n        "),t("span",{staticClass:"token variable"},[s._v("count")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("count")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("od")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("count")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n"),t("span",{staticClass:"token keyword"},[s._v("trait")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("Sack")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("add")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("thing")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("count")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n"),t("span",{staticClass:"token keyword"},[s._v("class")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("SACK")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("Sack")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token variable"},[s._v("_things")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("MutableList")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("init")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token variable"},[s._v("_things")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("LIST")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("add")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("thing")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token variable"},[s._v("_things")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("add")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("thing")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("count")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("int")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("_things")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("count")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n"),t("span",{staticClass:"token variable"},[s._v("demonstrate_sack")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("sack")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("Sack")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("things")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("Iterable")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("T")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("for")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("thing")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("in")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("things")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("do")]),s._v("\n        "),t("span",{staticClass:"token variable"},[s._v("sack")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("add")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("thing")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("od")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"sack has "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("sack")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("count")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('" things"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("entry")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("int_things")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("string_things")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token string"},[s._v('"one"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"two"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"three"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"four"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"five"')]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"int_things has "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("count_things")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("int_things")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('" things"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"string_things has "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("count_things")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("string_things")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('" things"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("demonstrate_sack")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("SACK")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("int_things")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("demonstrate_sack")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("SACK")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token class-name"},[s._v("string")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("string_things")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n")])])]),t("h3",{attrs:{id:"closures"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#closures"}},[s._v("#")]),s._v(" closures")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token keyword"},[s._v("use")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("IO")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Std")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("use")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("Collections")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("LIST")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("entry")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token comment"},[s._v("// f is an anonymous function:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("f")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// its type is int -> int")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("f")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("get_type")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("int")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// it returns its integer argument times two:")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("123")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("123")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("for")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("in")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),s._v("::"),t("span",{staticClass:"token number"},[s._v("10")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("do")]),s._v("\n        "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"f({0}) = {1}"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("object")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("od")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// list_of_gs is a list of 2-tuples, each one having an integer and a function element:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("list_of_gs")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("LIST")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("g")]),s._v(": "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("for")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("in")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),s._v("::"),t("span",{staticClass:"token number"},[s._v("10")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("do")]),s._v("\n        "),t("span",{staticClass:"token comment"},[s._v("// create a function that captures a value - in this case the loop variable i")]),s._v("\n        "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("g")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n        "),t("span",{staticClass:"token comment"},[s._v("// g is a parameterless function that returns an int:")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("g")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("get_type")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n        "),t("span",{staticClass:"token comment"},[s._v("// when we call g, it returns the value of i when g was created:")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("g")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n        "),t("span",{staticClass:"token comment"},[s._v("// store that function in our list for use later:")]),s._v("\n        "),t("span",{staticClass:"token variable"},[s._v("list_of_gs")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("add")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("g")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n        "),t("span",{staticClass:"token comment"},[s._v("// the last value in the list is the tuple we just added:")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("list_of_gs")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token variable"},[s._v("list_of_gs")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("count")]),t("span",{staticClass:"token number"},[s._v("-1")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("g")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("od")]),s._v("\n\n    "),t("span",{staticClass:"token control"},[s._v("for")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("ig")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("in")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("list_of_gs")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("do")]),s._v("\n        "),t("span",{staticClass:"token comment"},[s._v("// each saved g still returns the same value of i that")]),s._v("\n        "),t("span",{staticClass:"token comment"},[s._v("// it captured when it was created:")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("assert")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("ig")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("ig")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("g")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n        "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"g that captured i when it was {0} is a {1} that returns {2}"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token variable"},[s._v("ig")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("ig")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("g")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("ig")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("g")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("od")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n")])])]),t("h3",{attrs:{id:"pipes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pipes"}},[s._v("#")]),s._v(" pipes")]),s._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token comment"},[s._v("// make a type available in this scope without qualification")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("use")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("Collections")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Iterable")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token comment"},[s._v("// and a static method:")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("use")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("IO")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token class-name"},[s._v("Std")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("entry")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),t("span",{staticClass:"token comment"},[s._v("// ghūl has anonymous functions:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("f")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("string")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"i is "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"f(123) = "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("123")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    \n    "),t("span",{staticClass:"token comment"},[s._v("// anonymous functions infer their return type, if it is not explicit:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("g")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("j")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"j is "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("j")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"g(456) = "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("g")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("456")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// anonymous functions can have a block body:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("h")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("k")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("result")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"k is "')]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token variable"},[s._v("result")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("result")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("k")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),t("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("result")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("  \n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"h(789) = "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("h")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("789")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// anonymous functions can capture values from outer lexical scopes -")]),s._v("\n    "),t("span",{staticClass:"token comment"},[s._v("// in this case the anonymous functions f, g and h are captured:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("closure")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("j")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("k")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("f")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('", "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("g")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("j")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('", "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("h")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("k")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"captured values: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("closure")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("111")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("222")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("333")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// anonymous functions can be nested, and their frames live on after they return:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("outer")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("message")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"hello"')]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n        "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("middle")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n            "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("inner")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("message")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n            "),t("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("inner")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("                        \n        "),t("span",{staticClass:"token keyword"},[s._v("si")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n        "),t("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("middle")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("si")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    \n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("hello_inner_from_outer")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("outer")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"call inner() returned by outer(): "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("hello_inner_from_outer")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("           \n\n    "),t("span",{staticClass:"token comment"},[s._v("// '[' and ']' construct an immutable list (Collections.List[T], where T is inferred from the element type):")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("list")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"list: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("list")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// '..' constructs an iterable integer range, inclusive of the first element and exclusive of the last:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("exclusive_range")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token operator"},[s._v("..")]),t("span",{staticClass:"token number"},[s._v("10")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"exclusive int range: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("exclusive_range")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// '::' constructs an iterable integer range, inclusive of the first and last elements:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("inclusive_range")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),s._v("::"),t("span",{staticClass:"token number"},[s._v("10")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"inclusive int range: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("inclusive_range")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// the '|' postfix operator converts a Collections.Iterable[T] into a Pipes.Pipe`1[T]")]),s._v("\n    "),t("span",{staticClass:"token comment"},[s._v("// Pipe`1[T] provides a number of ways to manipulate a sequence of elements")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// filter passes only those elements that meet a supplied filter condition.Collections")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("even")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("1")]),s._v("::"),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("filter")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("is_even")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"even numbers: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("even")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// you generally don't need explicit argument types for anonymous functions when they're")]),s._v("\n    "),t("span",{staticClass:"token comment"},[s._v("// passed as arguments, as their types can be inferred from context:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("odd")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("filter")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("is_odd")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"odd numbers: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("odd")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// map transforms elements according to a supplied function:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("times_3")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("map")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"times 3: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("times_3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// if you hover the mouse over the call to map, you'll see the full inferred method signature:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("strings")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token operator"},[s._v("..")]),t("span",{staticClass:"token number"},[s._v("9")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("map")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"\'"')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"\'"')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"map to strings: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("strings")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("strings_with_lengths")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v("\n            "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token string"},[s._v('"one"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"two"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"three"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"four"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"horse"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"weevil"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"six"')]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v("\n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("map")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("s")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("s")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("s")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("length")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"strings with lengths: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("strings_with_lengths")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// pipes are iterable, so you can loop over them with 'for':")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("for")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("iv")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("in")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("map")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("index")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token control"},[s._v("do")]),s._v("\n        "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"result #"')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("iv")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("index")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('" is "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("iv")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token variable"},[s._v("value")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token control"},[s._v("od")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// strings are iterable:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("upper")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"hello world"')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("map")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("c")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("char")]),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("to_upper")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("c")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"upper cased: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("upper")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("to_string")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('""')]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// reduce accumulates a running value according to a supplied function:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("sum")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("reduce")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("r")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("e")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("r")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("e")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"sum is: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("sum")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// you can chain multiple calls in a fluent style:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("count_greater_than_3")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" \n        "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v("\n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("filter")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(">")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v("\n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("count")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"count of elements > 3 is: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("count_greater_than_3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("sum_double_odd")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" \n        "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" \n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("filter")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token function"},[s._v("is_odd")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v("\n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("map")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v("\n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("reduce")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("r")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("e")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("r")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("e")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"sum of doubled odd numbers is: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("sum_double_odd")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("first_3")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("take")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"take first 3: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("first_3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("skip_3")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("skip")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"skip first 3: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("skip_3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("three_from_middle")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" \n        "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" \n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("skip")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v("\n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("take")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"take 3 from the middle: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("three_from_middle")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("sum_three_from_middle")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" \n        "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" \n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("skip")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v("\n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("take")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v("\n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("reduce")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("r")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("e")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("r")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("e")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"sum of 3 from the middle: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("sum_three_from_middle")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// zip combines two sequences into a single sequence of pairs/2-tuples")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("zip")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" \n        "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" \n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("zip")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"zip of two sequences is: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("zip")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// or into a sequence where each element is derived by passing the")]),s._v("\n    "),t("span",{staticClass:"token comment"},[s._v("// left + right elements to a supplied function:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("zip_map")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v("\n        "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" \n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("zip")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("l")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("r")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("l")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("r")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"sum of zipped is: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("zip_map")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v(" \n\n    "),t("span",{staticClass:"token comment"},[s._v("// cat concatenates two pipes into a single sequence")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("cat")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v("\n        "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v("\n            "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("cat")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token number"},[s._v("8")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("7")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("6")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("5")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("4")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("3")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("2")]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("1")]),t("span",{staticClass:"token punctuation"},[s._v("]")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"concatenated is: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("cat")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token comment"},[s._v("// .index() tags each element with its 0-based index in the sequence:")]),s._v("\n    "),t("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("indexed")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),t("span",{staticClass:"token punctuation"},[s._v("[")]),t("span",{staticClass:"token string"},[s._v('"cat"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"dog"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"fish"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"zebra"')]),t("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"ameoba"')]),t("span",{staticClass:"token punctuation"},[s._v("]")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("|")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v(".")]),t("span",{staticClass:"token function"},[s._v("index")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),t("span",{staticClass:"token function"},[s._v("write_line")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token string"},[s._v('"indexed: "')]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("indexed")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n"),t("span",{staticClass:"token function"},[s._v("is_odd")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("bool")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" ∩ "),t("span",{staticClass:"token number"},[s._v("1")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("!=")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),t("span",{staticClass:"token function"},[s._v("is_even")]),t("span",{staticClass:"token punctuation"},[s._v("(")]),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(": "),t("span",{staticClass:"token class-name"},[s._v("int")]),t("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),t("span",{staticClass:"token class-name"},[s._v("bool")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),t("span",{staticClass:"token variable"},[s._v("i")]),s._v(" ∩ "),t("span",{staticClass:"token number"},[s._v("1")]),s._v(" "),t("span",{staticClass:"token operator"},[s._v("==")]),s._v(" "),t("span",{staticClass:"token number"},[s._v("0")]),t("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);