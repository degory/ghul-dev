(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{321:function(s,a,t){"use strict";t.r(a);var n=t(14),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"ghul-programming-language"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ghul-programming-language"}},[s._v("#")]),s._v(" ghÅ«l programming language")]),s._v(" "),a("p",[a("img",{attrs:{src:"ghul-logo-draft.png",alt:"Hero Image"}})]),s._v(" "),a("p",[s._v("(Note: this site is very much a "),a("strong",[s._v("work-in-progress")]),s._v(". The "),a("a",{attrs:{href:"https://github.com/degory/ghul",target:"_blank",rel:"noopener noreferrer"}},[s._v("ghÅ«l compiler"),a("OutboundLink")],1),s._v(" is currently the definitive ghÅ«l language reference)")]),s._v(" "),a("h2",{attrs:{id:"why-ghul"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-ghul"}},[s._v("#")]),s._v(" why ghÅ«l?")]),s._v(" "),a("p",[s._v("Why not ðŸ¤”")]),s._v(" "),a("p",[s._v("ghÅ«l is mainly an opportunity for "),a("a",{attrs:{href:"https://github.com/degory",target:"_blank",rel:"noopener noreferrer"}},[s._v("me"),a("OutboundLink")],1),s._v(" to experiment with programming language design. Apart from a slightly quirky syntax, ghÅ«l is a fairly conventional programming language. Although ghÅ«l is a hobby project maintained by a single person, its goal is to be sufficiently expressive for general-purpose development: the "),a("a",{attrs:{href:"https://github.com/degory/ghul",target:"_blank",rel:"noopener noreferrer"}},[s._v("ghÅ«l compiler"),a("OutboundLink")],1),s._v(" itself is written in ghÅ«l.")]),s._v(" "),a("h2",{attrs:{id:"features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[s._v("#")]),s._v(" features")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("type safety")]),s._v(": ghÅ«l enforces type safety at compile-time.")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("functional programming elements")]),s._v(": ghÅ«l supports function literals, including anonymous functions, lambdas, and closures.")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("OOP")]),s._v(": ghÅ«l supports classes, objects, inheritance, polymorphism, and other Object-Oriented Programming concepts.")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("error handling")]),s._v(": the language includes try/catch/finally for error handling.")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("generics")]),s._v(": ghÅ«l types, methods, and functions can have generic type parameters.")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v(".NET integration")]),s._v(": ghÅ«l targets .NET, producing and consuming NuGet packages and supporting inter-operation with other .NET languages.")])])]),s._v(" "),a("h2",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[s._v("#")]),s._v(" examples")]),s._v(" "),a("h3",{attrs:{id:"hello-world"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[s._v("#")]),s._v(" hello world!")]),s._v(" "),a("div",{staticClass:"language-ghul extra-class"},[a("pre",{staticClass:"language-ghul"},[a("code",{staticClass:"language-ghul"},[a("span",{staticClass:"token function"},[s._v("entry")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=>")]),s._v("\n    "),a("span",{staticClass:"token class-name"},[s._v("IO")]),a("span",{staticClass:"token operator"},[s._v(".")]),a("span",{staticClass:"token class-name"},[s._v("Std")]),a("span",{staticClass:"token operator"},[s._v(".")]),a("span",{staticClass:"token function"},[s._v("write_line")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token string"},[s._v('"hello world"')]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v(" \n")])])]),a("h3",{attrs:{id:"functional"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functional"}},[s._v("#")]),s._v(" functional")]),s._v(" "),a("div",{staticClass:"language-ghul extra-class"},[a("pre",{staticClass:"language-ghul"},[a("code",{staticClass:"language-ghul"},[a("span",{staticClass:"token keyword"},[s._v("use")]),s._v(" "),a("span",{staticClass:"token class-name"},[s._v("IO")]),a("span",{staticClass:"token operator"},[s._v(".")]),a("span",{staticClass:"token class-name"},[s._v("Std")]),a("span",{staticClass:"token operator"},[s._v(".")]),a("span",{staticClass:"token variable"},[s._v("write_line")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),a("span",{staticClass:"token function"},[s._v("entry")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),a("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("add")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("subtract")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("-")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("multiply")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("divide")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("/")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),a("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("calc")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("operation")]),s._v(": "),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=>")]),s._v(" "),a("span",{staticClass:"token function"},[s._v("operation")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("x")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),a("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("a")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),a("span",{staticClass:"token number"},[s._v("10.0")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("b")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),a("span",{staticClass:"token number"},[s._v("5.0")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),a("span",{staticClass:"token function"},[s._v("write_line")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token string"},[s._v('"Addition: "')]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),a("span",{staticClass:"token function"},[s._v("calc")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("a")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("b")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("add")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token function"},[s._v("write_line")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token string"},[s._v('"Subtraction: "')]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),a("span",{staticClass:"token function"},[s._v("calc")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("a")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("b")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("subtract")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token function"},[s._v("write_line")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token string"},[s._v('"Multiplication: "')]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),a("span",{staticClass:"token function"},[s._v("calc")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("a")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("b")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("multiply")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token function"},[s._v("write_line")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token string"},[s._v('"Division: "')]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),a("span",{staticClass:"token function"},[s._v("calc")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("a")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("b")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("divide")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),a("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n")])])]),a("h3",{attrs:{id:"oop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oop"}},[s._v("#")]),s._v(" OOP")]),s._v(" "),a("div",{staticClass:"language-ghul extra-class"},[a("pre",{staticClass:"language-ghul"},[a("code",{staticClass:"language-ghul"},[a("span",{staticClass:"token keyword"},[s._v("use")]),s._v(" "),a("span",{staticClass:"token class-name"},[s._v("IO")]),a("span",{staticClass:"token operator"},[s._v(".")]),a("span",{staticClass:"token class-name"},[s._v("Std")]),a("span",{staticClass:"token operator"},[s._v(".")]),a("span",{staticClass:"token variable"},[s._v("write_line")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n"),a("span",{staticClass:"token keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"token class-name"},[s._v("Calculator")]),s._v(" "),a("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),a("span",{staticClass:"token function"},[s._v("init")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),a("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),a("span",{staticClass:"token function"},[s._v("add")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),a("span",{staticClass:"token class-name"},[s._v("single")]),s._v(" "),a("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),a("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),a("span",{staticClass:"token function"},[s._v("subtract")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),a("span",{staticClass:"token class-name"},[s._v("single")]),s._v(" "),a("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),a("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("-")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),a("span",{staticClass:"token function"},[s._v("multiply")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),a("span",{staticClass:"token class-name"},[s._v("single")]),s._v(" "),a("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),a("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("*")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n    "),a("span",{staticClass:"token function"},[s._v("divide")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),s._v(": "),a("span",{staticClass:"token class-name"},[s._v("single")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("->")]),s._v(" "),a("span",{staticClass:"token class-name"},[s._v("single")]),s._v(" "),a("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n        "),a("span",{staticClass:"token control"},[s._v("if")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("!=")]),s._v(" "),a("span",{staticClass:"token number"},[s._v("0.0")]),s._v(" "),a("span",{staticClass:"token control"},[s._v("then")]),s._v("\n            "),a("span",{staticClass:"token control"},[s._v("return")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("x")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("/")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("y")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),a("span",{staticClass:"token control"},[s._v("else")]),s._v("\n            "),a("span",{staticClass:"token control"},[s._v("throw")]),s._v(" "),a("span",{staticClass:"token keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"token class-name"},[s._v("System")]),a("span",{staticClass:"token operator"},[s._v(".")]),a("span",{staticClass:"token class-name"},[s._v("DivideByZeroException")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token string"},[s._v('"Error: Division by zero"')]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n        "),a("span",{staticClass:"token control"},[s._v("fi")]),s._v("\n    "),a("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n"),a("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n\n"),a("span",{staticClass:"token function"},[s._v("entry")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),s._v(" "),a("span",{staticClass:"token keyword"},[s._v("is")]),s._v("\n    "),a("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("calc")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),a("span",{staticClass:"token keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"token class-name"},[s._v("Calculator")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),a("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("a")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),a("span",{staticClass:"token number"},[s._v("10.0")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token keyword"},[s._v("let")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("b")]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("=")]),s._v(" "),a("span",{staticClass:"token number"},[s._v("5.0")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n\n    "),a("span",{staticClass:"token function"},[s._v("write_line")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token string"},[s._v('"Addition: "')]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("calc")]),a("span",{staticClass:"token operator"},[s._v(".")]),a("span",{staticClass:"token function"},[s._v("add")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("a")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("b")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token function"},[s._v("write_line")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token string"},[s._v('"Subtraction: "')]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("calc")]),a("span",{staticClass:"token operator"},[s._v(".")]),a("span",{staticClass:"token function"},[s._v("subtract")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("a")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("b")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token function"},[s._v("write_line")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token string"},[s._v('"Multiplication: "')]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("calc")]),a("span",{staticClass:"token operator"},[s._v(".")]),a("span",{staticClass:"token function"},[s._v("multiply")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("a")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("b")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n    "),a("span",{staticClass:"token function"},[s._v("write_line")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token string"},[s._v('"Division: "')]),s._v(" "),a("span",{staticClass:"token operator"},[s._v("+")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("calc")]),a("span",{staticClass:"token operator"},[s._v(".")]),a("span",{staticClass:"token function"},[s._v("divide")]),a("span",{staticClass:"token punctuation"},[s._v("(")]),a("span",{staticClass:"token variable"},[s._v("a")]),a("span",{staticClass:"token punctuation"},[s._v(",")]),s._v(" "),a("span",{staticClass:"token variable"},[s._v("b")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(")")]),a("span",{staticClass:"token punctuation"},[s._v(";")]),s._v("\n"),a("span",{staticClass:"token keyword"},[s._v("si")]),s._v("\n")])])]),a("h3",{attrs:{id:"examples-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples-project"}},[s._v("#")]),s._v(" examples project")]),s._v(" "),a("p",[s._v("See the "),a("a",{attrs:{href:"https://github.com/degory/ghul-examples",target:"_blank",rel:"noopener noreferrer"}},[s._v("ghÅ«l examples repository"),a("OutboundLink")],1),s._v(" for projects with these examples and others that can be viewed, edited and run from Visual Studio Code or a GitHub Codespace.")])])}),[],!1,null,null,null);a.default=e.exports}}]);