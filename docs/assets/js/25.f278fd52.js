(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{308:function(n,t,a){"use strict";a.r(t);var e=a(14),s=Object(e.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("Constants: Declaration and benefits\nMutable vs immutable data\nOperators and Expressions")]),n._v(" "),t("p",[n._v("Arithmetic operators\nComparison and logical operators\nAssignment operators\nOperator precedence and associativity\nExpressions and evaluation\nControl Flow")]),n._v(" "),t("p",[n._v("Conditional Statements\nif, else statements: Syntax and examples\nNested conditionals and best practices\nConditional expressions (ternary operator)\nLooping Constructs\nfor loops: Syntax, usage, and variations\nwhile and do-while loops: Differences and use cases\nLoop control statements (break, continue)\nError Handling and Exceptions")]),n._v(" "),t("p",[n._v("Try-catch-finally blocks: Syntax and how to use them\nCreating custom exceptions\nBest practices in exception handling\nError handling patterns\nComments and Documentation")]),n._v(" "),t("p",[n._v("Single-line and multi-line comments\nDocumentation comments: Syntax and tools for generating documentation\nBest practices for commenting and documenting code\nInput and Output Operations")]),n._v(" "),t("p",[n._v("Reading from and writing to the console\nBasic file I/O operations (if applicable)\nFormatting and parsing data\nModules and Namespaces")]),n._v(" "),t("p",[n._v("Defining and using modules/namespaces\nImporting external modules\nOrganizing code into modules for better maintainability\nStyle and Naming Conventions")]),n._v(" "),t("p",[n._v("Recommended naming conventions for variables, functions, classes, etc.\nCode formatting guidelines\nTips for writing clean and readable code")]),n._v(" "),t("h3",{attrs:{id:"interaction-of-return-with-try-catch-finally"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#interaction-of-return-with-try-catch-finally"}},[n._v("#")]),n._v(" interaction of return with try-catch-finally")]),n._v(" "),t("p",[n._v("If a return statement is executed from within a "),t("code",[n._v("try")]),n._v(" block, then control is first passed to the enclosing "),t("code",[n._v("finally")]),n._v(" blocks for every "),t("code",[n._v("try")]),n._v(" block that encloses the "),t("code",[n._v("return")]),n._v(" statement before control exits the function.")]),n._v(" "),t("p",[n._v("In general during the course of exception handling or function return, you can imagine there is a single return value or exception object that is being passed from the point of the return, the throw, or the function invocation that has thrown.")]),n._v(" "),t("p",[n._v("That object passes through enclosing catch and finally blocks, where it can be replaced by a different exception or return value, until control flow finally leaves the function.")]),n._v(" "),t("div",{staticClass:"language-ghul extra-class"},[t("pre",{staticClass:"language-ghul"},[t("code",{staticClass:"language-ghul"},[t("span",{staticClass:"token function"},[n._v("swallow")]),t("span",{staticClass:"token punctuation"},[n._v("(")]),t("span",{staticClass:"token variable"},[n._v("i")]),n._v(": "),t("span",{staticClass:"token class-name"},[n._v("int")]),t("span",{staticClass:"token punctuation"},[n._v(")")]),n._v(" "),t("span",{staticClass:"token operator"},[n._v("->")]),n._v(" "),t("span",{staticClass:"token class-name"},[n._v("int")]),n._v(" "),t("span",{staticClass:"token keyword"},[n._v("is")]),n._v("\n    "),t("span",{staticClass:"token control"},[n._v("try")]),n._v("\n        "),t("span",{staticClass:"token control"},[n._v("return")]),n._v(" "),t("span",{staticClass:"token function"},[n._v("do_something_risky")]),t("span",{staticClass:"token punctuation"},[n._v("(")]),t("span",{staticClass:"token variable"},[n._v("i")]),t("span",{staticClass:"token punctuation"},[n._v(")")]),t("span",{staticClass:"token punctuation"},[n._v(";")]),n._v("\n    "),t("span",{staticClass:"token control"},[n._v("catch")]),n._v(" "),t("span",{staticClass:"token variable"},[n._v("e")]),n._v(": "),t("span",{staticClass:"token class-name"},[n._v("Exception")]),n._v("\n        "),t("span",{staticClass:"token control"},[n._v("return")]),n._v(" "),t("span",{staticClass:"token number"},[n._v("1234")]),t("span",{staticClass:"token punctuation"},[n._v(";")]),n._v(" "),t("span",{staticClass:"token comment"},[n._v("// I'm sure it was fine")]),n._v("\n    "),t("span",{staticClass:"token control"},[n._v("yrt")]),n._v("\n"),t("span",{staticClass:"token keyword"},[n._v("si")]),n._v("\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);