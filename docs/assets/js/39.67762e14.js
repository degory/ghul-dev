(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{322:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ghul-programming-language"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ghul-programming-language"}},[t._v("#")]),t._v(" ghÅ«l programming language")]),t._v(" "),s("p",[s("img",{attrs:{src:"ghul-logo-draft.png",alt:"Hero Image"}})]),t._v(" "),s("p",[t._v("(Note: this site is very much a "),s("strong",[t._v("work-in-progress")]),t._v(". The "),s("a",{attrs:{href:"https://github.com/degory/ghul",target:"_blank",rel:"noopener noreferrer"}},[t._v("ghÅ«l compiler"),s("OutboundLink")],1),t._v(" is currently the definitive ghÅ«l language reference)")]),t._v(" "),s("h2",{attrs:{id:"why-ghul"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why-ghul"}},[t._v("#")]),t._v(" why ghÅ«l?")]),t._v(" "),s("p",[t._v("Why not ðŸ¤”")]),t._v(" "),s("p",[t._v("ghÅ«l is mainly an opportunity for "),s("a",{attrs:{href:"https://github.com/degory",target:"_blank",rel:"noopener noreferrer"}},[t._v("me"),s("OutboundLink")],1),t._v(" to experiment with programming language design. Apart from a slightly quirky syntax, ghÅ«l is a fairly conventional programming language. Although ghÅ«l is a hobby project maintained by a single person, its goal is to be sufficiently expressive for general-purpose development: the "),s("a",{attrs:{href:"https://github.com/degory/ghul",target:"_blank",rel:"noopener noreferrer"}},[t._v("ghÅ«l compiler"),s("OutboundLink")],1),t._v(" itself is written in ghÅ«l.")]),t._v(" "),s("h2",{attrs:{id:"features"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[t._v("#")]),t._v(" features")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("type safety")]),t._v(": ghÅ«l enforces type safety at compile-time.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("functional programming elements")]),t._v(": ghÅ«l supports function literals, including anonymous functions, lambdas, and closures.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("OOP")]),t._v(": ghÅ«l supports classes, objects, inheritance, polymorphism, and other Object-Oriented Programming concepts.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("error handling")]),t._v(": the language includes try/catch/finally for error handling.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("generics")]),t._v(": ghÅ«l types, methods, and functions can have generic type parameters.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v(".NET integration")]),t._v(": ghÅ«l targets .NET, producing and consuming NuGet packages and supporting inter-operation with other .NET languages.")])])]),t._v(" "),s("h2",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" examples")]),t._v(" "),s("h3",{attrs:{id:"hello-world"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[t._v("#")]),t._v(" hello world!")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token function"},[t._v("entry")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("IO")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Std")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"hello world"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" \n")])])]),s("h3",{attrs:{id:"functional"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#functional"}},[t._v("#")]),t._v(" functional")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("use")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("IO")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Std")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("entry")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token comment"},[t._v("// lazily generates an infinite sequence of fibonacci numbers:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("fibonacci_sequence")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("generate")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("\n        "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n        "),s("span",{staticClass:"token variable"},[t._v("state")]),t._v(": "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n            "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" \n                "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("prev")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("current")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("state")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n                "),s("span",{staticClass:"token variable"},[t._v("next")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("prev")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("current")]),t._v("\n            "),s("span",{staticClass:"token control"},[t._v("in")]),t._v("\n                "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("current")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("next")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("next")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// lazily generates an infinite sequence of factorials:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("factorial_sequence")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("generate")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("\n        "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n        "),s("span",{staticClass:"token variable"},[t._v("state")]),t._v(": "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n            "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v("\n                "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("p")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("prev")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("state")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n                "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("p")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n                "),s("span",{staticClass:"token variable"},[t._v("next")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("prev")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("n")]),t._v("\n            "),s("span",{staticClass:"token control"},[t._v("in")]),t._v("\n                "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("n")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("next")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("next")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("            \n    "),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"first 10 fibonacci numbers: {fibonacci_sequence | .take(10)}"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"first 10 factorial numbers: {factorial_sequence | .take(10)}"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"first 10 even fibonacci numbers: {fibonacci_sequence | .filter(x => x % 2 == 0) .take(10)}"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("for")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("fib")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("fact")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("in")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("fibonacci_sequence")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("zip")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("factorial_sequence")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("take")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("index")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("do")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"fibonacci {i} is {fib}"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"factorial {i} is {fact}"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("od")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n")])])]),s("h3",{attrs:{id:"oop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oop"}},[t._v("#")]),t._v(" OOP")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("use")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("IO")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Std")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Calculator")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("init")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("add")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("single")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("single")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("single")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("return")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("subtract")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("single")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("single")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("single")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("return")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("-")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("multiply")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("single")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("single")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("single")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("return")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("divide")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("single")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("single")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("single")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("!=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0.0")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v("\n            "),s("span",{staticClass:"token control"},[t._v("return")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("x")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("/")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("y")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("else")]),t._v("\n            "),s("span",{staticClass:"token control"},[t._v("throw")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("System")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("DivideByZeroException")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"Error: Division by zero"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("fi")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("entry")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("calc")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Calculator")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("a")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("10.0")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("b")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5.0")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"Addition: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("calc")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("add")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("a")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("b")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"Subtraction: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("calc")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("subtract")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("a")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("b")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"Multiplication: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("calc")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("multiply")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("a")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("b")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"Division: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("calc")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("divide")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("a")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("b")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n")])])]),s("h3",{attrs:{id:"examples-project"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples-project"}},[t._v("#")]),t._v(" examples project")]),t._v(" "),s("p",[t._v("See the "),s("a",{attrs:{href:"https://github.com/degory/ghul-examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("ghÅ«l examples repository"),s("OutboundLink")],1),t._v(" for projects with these examples and others that can be viewed, edited and run from Visual Studio Code or a GitHub Codespace.")])])}),[],!1,null,null,null);s.default=e.exports}}]);