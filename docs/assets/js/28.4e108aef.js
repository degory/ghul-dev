(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{309:function(t,s,a){"use strict";a.r(s);var n=a(14),o=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ghul-programming-language-docs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ghul-programming-language-docs"}},[t._v("#")]),t._v(" ghÅ«l programming language docs")]),t._v(" "),s("h2",{attrs:{id:"hello-world"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[t._v("#")]),t._v(" Hello World!")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token function"},[t._v("entry")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v("\n    "),s("span",{staticClass:"token class-name"},[t._v("IO")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Std")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"hello world"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" \n")])])]),s("h1",{attrs:{id:"literals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#literals"}},[t._v("#")]),t._v(" literals")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("use")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("IO")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Std")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("entry")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"string literal"')]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("get_type")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"string literal"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token string"},[t._v("'c'")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("get_type")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("char")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"char literal: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token string"},[t._v("'c'")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("123")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("get_type")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"integer literal: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("123")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" 123_456"),s("span",{staticClass:"token operator"},[t._v(".")]),t._v("789e6D "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("get_type")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("double")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"double literal: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" 123_456"),s("span",{staticClass:"token operator"},[t._v(".")]),t._v("789e6D"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"three"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"string"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"tuple"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("get_type")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"tuple literal: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"three"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"string"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"tuple"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token string"},[t._v('"a"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"four"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"element"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"list"')]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("get_type")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"list literal: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token string"},[t._v('"a"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"four"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"element"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"list"')]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token operator"},[t._v("|")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n")])])]),s("h1",{attrs:{id:"control-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#control-flow"}},[t._v("#")]),t._v(" control flow")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("use")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("IO")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Std")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("entry")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token comment"},[t._v("// ghul has basic flow control statements")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// assert tests a condition, and throws an exception if the condition does not hold:")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(">")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// the optional assert else clause supplies a message to include in any thrown exception:")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("true")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"who knows what to believe?"')]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// or a specific object to throw:")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("<")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"hello"')]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("length")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("else")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("System")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("IndexOutOfRangeException")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    \n    "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("true")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("true")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('""')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("fi")]),t._v("    \n\n    "),s("span",{staticClass:"token control"},[t._v("if")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("false")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("\\/")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("true")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("then")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"false or-else true"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("else")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("false")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("fi")]),t._v("\n    \n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("while")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("<")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("10")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("do")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("<")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("od")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("count")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("for")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("in")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token operator"},[t._v("..")]),s("span",{staticClass:"token number"},[t._v("10")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("do")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(">=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("/\\")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("<")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n        "),s("span",{staticClass:"token variable"},[t._v("count")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("count")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("od")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("count")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// 0..10 is not for loop specific syntax, '..' is just an operator that constructs")]),t._v("\n    "),s("span",{staticClass:"token comment"},[t._v("// an iterable integer range:")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("range")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token operator"},[t._v("..")]),s("span",{staticClass:"token number"},[t._v("100")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("range")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("from")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("range")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("to")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("100")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("range")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("count")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("100")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// for can iterate over anything that implements Iterable[T], Iterator[T], or move_next() and current:")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("for")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("ci")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("in")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"hello"')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("index")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("do")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("\"char {0} of 'hello' is {1}\"")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token variable"},[t._v("ci")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("index")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("ci")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("value")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("od")]),t._v("    \n    \n    "),s("span",{staticClass:"token control"},[t._v("try")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"wombat"')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=~")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"elephant"')]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("catch")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("ex")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("System")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Exception")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("ex")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("get_type")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Ghul")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("AssertFailedException")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n        "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"caught: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("ex")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("yrt")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// try finally for ensuring clean-up code is run:")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("is_resource_in_use")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("false")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("try")]),t._v("\n        "),s("span",{staticClass:"token variable"},[t._v("is_resource_in_use")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("true")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"resource acquired"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("throw")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("System")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Exception")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"oops: exception with resource held"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("catch")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("ex")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("System")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Exception")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"caught: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("ex")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("finally")]),t._v("\n        "),s("span",{staticClass:"token variable"},[t._v("is_resource_in_use")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("false")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"resource released"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("yrt")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("!")]),s("span",{staticClass:"token variable"},[t._v("is_resource_in_use")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    \n    "),s("span",{staticClass:"token class-name"},[t._v("IO")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Std")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"done"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n")])])]),s("h1",{attrs:{id:"closures"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#closures"}},[t._v("#")]),t._v(" closures")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token keyword"},[t._v("use")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("IO")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Std")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("use")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Collections")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("LIST")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("entry")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token comment"},[t._v("// f is an anonymous function:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("f")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// its type is int -> int")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("f")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("get_type")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// it returns its integer argument times two:")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("123")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("123")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("for")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("in")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),t._v("::"),s("span",{staticClass:"token number"},[t._v("10")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("do")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"f({0}) = {1}"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("object")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("od")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// list_of_gs is a list of 2-tuples, each one having an integer and a function element:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("list_of_gs")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("LIST")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("g")]),t._v(": "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("for")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("in")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),t._v("::"),s("span",{staticClass:"token number"},[t._v("10")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("do")]),t._v("\n        "),s("span",{staticClass:"token comment"},[t._v("// create a function that captures a value - in this case the loop variable i")]),t._v("\n        "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("g")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n        "),s("span",{staticClass:"token comment"},[t._v("// g is a parameterless function that returns an int:")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("g")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("get_type")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n        "),s("span",{staticClass:"token comment"},[t._v("// when we call g, it returns the value of i when g was created:")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("g")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n        "),s("span",{staticClass:"token comment"},[t._v("// store that function in our list for use later:")]),t._v("\n        "),s("span",{staticClass:"token variable"},[t._v("list_of_gs")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("add")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("g")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n        "),s("span",{staticClass:"token comment"},[t._v("// the last value in the list is the tuple we just added:")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("list_of_gs")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token variable"},[t._v("list_of_gs")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("count")]),s("span",{staticClass:"token number"},[t._v("-1")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("g")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("od")]),t._v("\n\n    "),s("span",{staticClass:"token control"},[t._v("for")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("ig")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("in")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("list_of_gs")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("do")]),t._v("\n        "),s("span",{staticClass:"token comment"},[t._v("// each saved g still returns the same value of i that")]),t._v("\n        "),s("span",{staticClass:"token comment"},[t._v("// it captured when it was created:")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("assert")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("ig")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("ig")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("g")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n        "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"g that captured i when it was {0} is a {1} that returns {2}"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token variable"},[t._v("ig")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("ig")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("g")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("ig")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("g")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("od")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n")])])]),s("h1",{attrs:{id:"pipes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pipes"}},[t._v("#")]),t._v(" pipes")]),t._v(" "),s("div",{staticClass:"language-ghul extra-class"},[s("pre",{staticClass:"language-ghul"},[s("code",{staticClass:"language-ghul"},[s("span",{staticClass:"token comment"},[t._v("// make a type available in this scope without qualification")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("use")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("Collections")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Iterable")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token comment"},[t._v("// and a static method:")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("use")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("IO")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token class-name"},[t._v("Std")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("entry")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n    "),s("span",{staticClass:"token comment"},[t._v("// ghÅ«l has anonymous functions:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("f")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("string")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"i is "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"f(123) = "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("123")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    \n    "),s("span",{staticClass:"token comment"},[t._v("// anonymous functions infer their return type, if it is not explicit:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("g")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("j")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"j is "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("j")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"g(456) = "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("g")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("456")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// anonymous functions can have a block body:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("h")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("k")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n        "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("result")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"k is "')]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token variable"},[t._v("result")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("result")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("k")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),s("span",{staticClass:"token control"},[t._v("return")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("result")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("  \n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"h(789) = "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("h")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("789")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// anonymous functions can capture values from outer lexical scopes -")]),t._v("\n    "),s("span",{staticClass:"token comment"},[t._v("// in this case the anonymous functions f, g and h are captured:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("closure")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("j")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("k")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("f")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('", "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("g")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("j")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('", "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("h")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("k")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"captured values: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("closure")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("111")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("222")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("333")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// anonymous functions can be nested, and their frames live on after they return:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("outer")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n        "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("message")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"hello"')]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n        "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("middle")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("is")]),t._v("\n            "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("inner")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("message")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n            "),s("span",{staticClass:"token control"},[t._v("return")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("inner")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("                        \n        "),s("span",{staticClass:"token keyword"},[t._v("si")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n        "),s("span",{staticClass:"token control"},[t._v("return")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("middle")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("si")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    \n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("hello_inner_from_outer")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("outer")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"call inner() returned by outer(): "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("hello_inner_from_outer")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("           \n\n    "),s("span",{staticClass:"token comment"},[t._v("// '[' and ']' construct an immutable list (Collections.List[T], where T is inferred from the element type):")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("list")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"list: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("list")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// '..' constructs an iterable integer range, inclusive of the first element and exclusive of the last:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("exclusive_range")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token operator"},[t._v("..")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"exclusive int range: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("exclusive_range")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// '::' constructs an iterable integer range, inclusive of the first and last elements:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("inclusive_range")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),t._v("::"),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"inclusive int range: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("inclusive_range")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// the '|' postfix operator converts a Collections.Iterable[T] into a Pipes.Pipe`1[T]")]),t._v("\n    "),s("span",{staticClass:"token comment"},[t._v("// Pipe`1[T] provides a number of ways to manipulate a sequence of elements")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// filter passes only those elements that meet a supplied filter condition.Collections")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("even")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("1")]),t._v("::"),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("filter")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("is_even")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"even numbers: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("even")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// you generally don't need explicit argument types for anonymous functions when they're")]),t._v("\n    "),s("span",{staticClass:"token comment"},[t._v("// passed as arguments, as their types can be inferred from context:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("odd")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("filter")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("is_odd")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"odd numbers: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("odd")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// map transforms elements according to a supplied function:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("times_3")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"times 3: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("times_3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// if you hover the mouse over the call to map, you'll see the full inferred method signature:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("strings")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token operator"},[t._v("..")]),s("span",{staticClass:"token number"},[t._v("9")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"\'"')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"\'"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"map to strings: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("strings")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("strings_with_lengths")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v("\n            "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token string"},[t._v('"one"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"two"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"three"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"four"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"horse"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"weevil"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"six"')]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v("\n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("s")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("s")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("s")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("length")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"strings with lengths: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("strings_with_lengths")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// pipes are iterable, so you can loop over them with 'for':")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("for")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("iv")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("in")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("index")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token control"},[t._v("do")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"result #"')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("iv")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("index")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('" is "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("iv")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token variable"},[t._v("value")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token control"},[t._v("od")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// strings are iterable:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("upper")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"hello world"')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("c")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("char")]),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("to_upper")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("c")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"upper cased: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("upper")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("to_string")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('""')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// reduce accumulates a running value according to a supplied function:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("sum")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("reduce")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("r")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("e")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("r")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("e")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"sum is: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("sum")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// you can chain multiple calls in a fluent style:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("count_greater_than_3")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" \n        "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v("\n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("filter")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(">")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("count")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"count of elements > 3 is: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("count_greater_than_3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("sum_double_odd")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" \n        "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" \n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("filter")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("is_odd")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("reduce")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("r")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("e")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("r")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("e")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"sum of doubled odd numbers is: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("sum_double_odd")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("first_3")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("take")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"take first 3: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("first_3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("skip_3")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("skip")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"skip first 3: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("skip_3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("three_from_middle")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" \n        "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" \n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("skip")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("take")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"take 3 from the middle: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("three_from_middle")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("sum_three_from_middle")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" \n        "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" \n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("skip")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("take")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("reduce")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("r")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("e")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("r")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("e")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"sum of 3 from the middle: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("sum_three_from_middle")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// zip combines two sequences into a single sequence of pairs/2-tuples")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("zip")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" \n        "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" \n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("zip")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"zip of two sequences is: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("zip")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// or into a sequence where each element is derived by passing the")]),t._v("\n    "),s("span",{staticClass:"token comment"},[t._v("// left + right elements to a supplied function:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("zip_map")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v("\n        "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" \n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("zip")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("l")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("r")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("l")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("r")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"sum of zipped is: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("zip_map")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" \n\n    "),s("span",{staticClass:"token comment"},[t._v("// cat concatenates two pipes into a single sequence")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("cat")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v("\n        "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v("\n            "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("cat")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token number"},[t._v("8")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("7")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("6")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"concatenated is: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("cat")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token comment"},[t._v("// .index() tags each element with its 0-based index in the sequence:")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("indexed")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("[")]),s("span",{staticClass:"token string"},[t._v('"cat"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"dog"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"fish"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"zebra"')]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),s("span",{staticClass:"token string"},[t._v('"ameoba"')]),s("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("|")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("index")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),s("span",{staticClass:"token function"},[t._v("write_line")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v('"indexed: "')]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("indexed")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token keyword"},[t._v("si")]),t._v("\n\n"),s("span",{staticClass:"token function"},[t._v("is_odd")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("bool")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" â© "),s("span",{staticClass:"token number"},[t._v("1")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("!=")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),s("span",{staticClass:"token function"},[t._v("is_even")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(": "),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("->")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("bool")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" "),s("span",{staticClass:"token variable"},[t._v("i")]),t._v(" â© "),s("span",{staticClass:"token number"},[t._v("1")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=o.exports}}]);